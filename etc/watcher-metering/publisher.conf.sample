[DEFAULT]

#
# From oslo.log
#

# Print debugging output (set logging level to DEBUG instead of
# default INFO level). (boolean value)
#debug = false

# If set to false, will disable INFO logging level, making WARNING the
# default. (boolean value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
#verbose = true

# The name of a logging configuration file. This file is appended to
# any existing logging configuration files. For details about logging
# configuration files, see the Python logging module documentation.
# (string value)
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# DEPRECATED. A logging.Formatter log message format string which may
# use any of the available logging.LogRecord attributes. This option
# is deprecated.  Please use logging_context_format_string and
# logging_default_format_string instead. (string value)
#log_format = <None>

# Format string for %%(asctime)s in log records. Default: %(default)s
# . (string value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to output to. If no default is set,
# logging will go to stdout. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative --log-file paths.
# (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Use syslog for logging. Existing syslog format is DEPRECATED and
# will be changed later to honor RFC5424. (boolean value)
#use_syslog = false

# (Optional) Enables or disables syslog rfc5424 format for logging. If
# enabled, prefixes the MSG part of the syslog message with APP-NAME
# (RFC5424). The format without the APP-NAME is deprecated in Kilo,
# and will be removed in Mitaka, along with this option. (boolean
# value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
#use_syslog_rfc_format = true

# Syslog facility to receive log lines. (string value)
#syslog_log_facility = LOG_USER

# Log output to standard error. (boolean value)
#use_stderr = true

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages without context. (string
# value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Data to append to log format when level is DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string
# value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# List of logger=LEVEL pairs. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message.
# (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message.
# (string value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false


[keystone_authtoken]

#
# From watcher_metering.store
#

# Complete public Identity API endpoint (string value)
#auth_uri = <None>

#
# From watcher_metering.store
#

# Keystone account username (string value)
#admin_user = <None>

#
# From watcher_metering.store
#

# Keystone account password (string value)
#admin_password = <None>

#
# From watcher_metering.store
#

# Keystone service account tenant name to validate user tokens (string
# value)
#admin_tenant_name = admin


[metrics_store.riemann]

#
# From watcher_metering.store
#

# Complete Riemann endpoint, e.g. tcp://localhost:5555. (string value)
#store_endpoint = <None>

# The default host value used when no other host value is determined,
# such as from the metric resource_metadata. (string value)
#default_metric_host = openstack

# The default amount of time in seconds that events sent to Riemann
# are retained in its index. (integer value)
#default_metric_ttl = 86400

# The default state value used when no other state value is
# determined, such as from the metric resource_metadata. (string
# value)
#default_metric_state = ok

# The current datacenter name (string value)
#datacenter = <None>


[publisher]

#
# From watcher_metering.publisher
#

# The name of the store backend to which the metrics will be sent over
# (riemann or ceilometer). (string value)
#metrics_store = riemann

# Whether it should configure the socket using nanoconfig or itself.
# (boolean value)
#use_nanoconfig_service = false

# Profile name to be requested to the nanoconfig service. Should
# always take the form: nanoconfig://{PROFILE_NAME} (string value)
#nanoconfig_profile = nanoconfig://watcher-metering-publisher

# Nanoconfig service endpoint URI. By default, extracted from the
# "NN_CONFIG_SERVICE" environment variable (string value)
#nanoconfig_service_endpoint = <None>

# Nanoconfig update service endpoint URI. By default, extracted from
# the "NN_CONFIG_UPDATES" environment variable (string value)
#nanoconfig_update_endpoint = <None>

# Publisher endpoint URI which is used to pull the data from the
# agents. Only used when the `use_nanoconfig_service` option is not
# activated (string value)
#publisher_endpoint = tcp://0.0.0.0:12345

# Maximum size of the metric queue (integer value)
#max_queue_size = 8

# Maximum size for the worker pool (integer value)
#max_worker = 8

# Minimum size for the worker pool (integer value)
#min_worker = 2
